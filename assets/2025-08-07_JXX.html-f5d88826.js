import{_ as a,p as r,q as d,a1 as t}from"./framework-596b4733.js";const o={};function s(i,e){return r(),d("div",null,[...e[0]||(e[0]=[t('<h1 id="金溪欣-前端面试" tabindex="-1"><a class="header-anchor" href="#金溪欣-前端面试" aria-hidden="true">#</a> 金溪欣 - 前端面试</h1><blockquote><p>面试时间：2025-08-07</p><p>公司全称：北京金溪欣网络科技有限公司</p><p>公司位置：广州天河区广州环贸中心43楼4303A室</p></blockquote><h2 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题" aria-hidden="true">#</a> 面试题</h2><h6 id="如何解决移动端不同设备布局展示不一致问题" tabindex="-1"><a class="header-anchor" href="#如何解决移动端不同设备布局展示不一致问题" aria-hidden="true">#</a> 如何解决移动端不同设备布局展示不一致问题</h6><details class="custom-container details"><summary>查看答案</summary><p>使用媒体查询 @media 对不同设备做适配；</p><p>使用弹性布局，如 Flexbox、Grid 布局；</p><p>使用相对单位，如 rem/em、vw/wh、百分比。</p></details><hr><h6 id="如何自己实现一个富文本编辑器" tabindex="-1"><a class="header-anchor" href="#如何自己实现一个富文本编辑器" aria-hidden="true">#</a> 如何自己实现一个富文本编辑器</h6><details class="custom-container details"><summary>查看答案</summary><p>首先进行功能划分为内容模块、工具栏模块、选区管理模块、命令管理模块。</p><p>内容模块 div 容器设置 contenteditable=&quot;true&quot; 属性，即可使容器变为可编辑状态；</p><p>工具栏模块提供加粗、斜体、撤销/重做、图片上传等功能按钮；</p><p>选区管理模块用于追踪和操作当前文本选区；</p><p>命令管理模块用于提供操作快捷键；</p></details><hr><h6 id="ai-在你实际开发中的代码占比-你是怎么去使用-ai-的" tabindex="-1"><a class="header-anchor" href="#ai-在你实际开发中的代码占比-你是怎么去使用-ai-的" aria-hidden="true">#</a> AI 在你实际开发中的代码占比？你是怎么去使用 AI 的？</h6><details class="custom-container details"><summary>查看答案</summary><p>AI 在我实际开发中代码占比只有 xx%。</p><p>我实际开发中使用最多的还是对话式 AI，比如通义灵码、DeepSeek、腾讯元宝这类产品，它们对我编写的代码基本没有侵入性，而且我也可以很容易地对它们给的代码进行优化改进。但像 Cursor、Claude Code、Trae 这类的生成式 AI 能够直接改造整个项目所有文件，这对我目前来说还是太过于黑盒了，它们一改就几个甚至十几个文件，而且还能删除文件，我还需要对它们代码 codeReview，这花费的时间感觉更多，而且这个代码逻辑并不是我自己总结编写的，随着代码量的增多以及业务复杂度越来越高，如果出现询问 AI 无法解决的问题，就需要我从头捋 AI 写的代码，这个过程将是繁琐而耗时的。所以 AI 目前还只是作为给我提供思路的辅助性工具而使用。</p></details><hr><h6 id="linux-常用命令有哪些" tabindex="-1"><a class="header-anchor" href="#linux-常用命令有哪些" aria-hidden="true">#</a> Linux 常用命令有哪些</h6><details class="custom-container details"><summary>查看答案</summary><p><strong>文件与目录管理</strong>：ls（列出目录内容，<code>ls -l</code> 显示详细信息，<code>ls -a</code> 包含隐藏文件）、cd（切换目录）、pwd（显示当前路径）、cp（复制文件或目录，<code>cp -r dir /new/path</code> 递归复制目录）、mv（移动或重命名文件/目录）、rm（删除文件或目录，<code>rm -rf dir</code> 强制删除）、mkdir（创建目录，<code>mkdir -p /path/to/dir</code> 递归创建多层目录）；</p><p><strong>系统与进程管理</strong>：ps（查看进程状态，<code>ps aux</code> 显示所有进程）、kill（终止指定进程，<code>kill -9 pid</code> 强制终止进程）、date（查看或设置系统时间，<code>date -s &quot;2025-08-09&quot;</code> 设置日期）、reboot（重启系统）；</p><p><strong>文本处理</strong>：echo（输出字符串或变量）、touch（创建空文件，<code>touch newfile.txt</code>）；</p><p><strong>终端操作</strong>：clear（清屏）；</p><p><strong>实用工具</strong>：wget（用于下载网络文件，<code>wget https://example.com/file.txt</code>）、tree（以树状图展示目录结构）。</p><hr></details><hr><h2 id="笔试题" tabindex="-1"><a class="header-anchor" href="#笔试题" aria-hidden="true">#</a> 笔试题</h2>',16)])])}const n=a(o,[["render",s],["__file","2025-08-07_JXX.html.vue"]]);export{n as default};
